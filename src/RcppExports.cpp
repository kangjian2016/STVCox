// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// h_beta_t0_Rcpp
double h_beta_t0_Rcpp(double tau, double beta_t, double alph);
RcppExport SEXP _STVCox_h_beta_t0_Rcpp(SEXP tauSEXP, SEXP beta_tSEXP, SEXP alphSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< double >::type beta_t(beta_tSEXP);
    Rcpp::traits::input_parameter< double >::type alph(alphSEXP);
    rcpp_result_gen = Rcpp::wrap(h_beta_t0_Rcpp(tau, beta_t, alph));
    return rcpp_result_gen;
END_RCPP
}
// lplk_Rcpp
double lplk_Rcpp(arma::vec par, arma::vec alph, arma::vec time, arma::vec delta, arma::mat z, arma::mat Bs);
RcppExport SEXP _STVCox_lplk_Rcpp(SEXP parSEXP, SEXP alphSEXP, SEXP timeSEXP, SEXP deltaSEXP, SEXP zSEXP, SEXP BsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type par(parSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type alph(alphSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type time(timeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Bs(BsSEXP);
    rcpp_result_gen = Rcpp::wrap(lplk_Rcpp(par, alph, time, delta, z, Bs));
    return rcpp_result_gen;
END_RCPP
}
// lplk_Rcpp_penalty
double lplk_Rcpp_penalty(arma::vec par, arma::vec alph, arma::vec time, arma::vec delta, arma::mat z, arma::mat Bs, double rho);
RcppExport SEXP _STVCox_lplk_Rcpp_penalty(SEXP parSEXP, SEXP alphSEXP, SEXP timeSEXP, SEXP deltaSEXP, SEXP zSEXP, SEXP BsSEXP, SEXP rhoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type par(parSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type alph(alphSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type time(timeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Bs(BsSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    rcpp_result_gen = Rcpp::wrap(lplk_Rcpp_penalty(par, alph, time, delta, z, Bs, rho));
    return rcpp_result_gen;
END_RCPP
}
// lplk_Rcpp_min_beta
double lplk_Rcpp_min_beta(arma::vec par, arma::vec alph, arma::vec time, arma::vec delta, arma::mat z, arma::mat Bs);
RcppExport SEXP _STVCox_lplk_Rcpp_min_beta(SEXP parSEXP, SEXP alphSEXP, SEXP timeSEXP, SEXP deltaSEXP, SEXP zSEXP, SEXP BsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type par(parSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type alph(alphSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type time(timeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Bs(BsSEXP);
    rcpp_result_gen = Rcpp::wrap(lplk_Rcpp_min_beta(par, alph, time, delta, z, Bs));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_STVCox_h_beta_t0_Rcpp", (DL_FUNC) &_STVCox_h_beta_t0_Rcpp, 3},
    {"_STVCox_lplk_Rcpp", (DL_FUNC) &_STVCox_lplk_Rcpp, 6},
    {"_STVCox_lplk_Rcpp_penalty", (DL_FUNC) &_STVCox_lplk_Rcpp_penalty, 7},
    {"_STVCox_lplk_Rcpp_min_beta", (DL_FUNC) &_STVCox_lplk_Rcpp_min_beta, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_STVCox(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
