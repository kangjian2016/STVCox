% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/STVCox.R
\name{STVCox_fit}
\alias{STVCox_fit}
\title{Soft-threshold time-varying effects in survival model.}
\usage{
STVCox_fit(
  time,
  delta,
  z,
  time_grid,
  qn = 8,
  maxit = 200,
  bounds = NULL,
  rho = 0.01
)
}
\arguments{
\item{time}{numeric vector of n observations for event time.}

\item{delta}{binary (0,1) vector of observations for event indicator.}

\item{z}{design matrix (n x p) for the covariates .}

\item{time_grid}{time grid points for estimating the effects.}

\item{qn}{integer to specify the number of knots in the B-spline.}

\item{maxit}{integer to specify the maximum number of iterations for optimization.}

\item{bounds}{vector of two values for the range for knots of the B-spline.}

\item{rho}{positive numeric value for the tuning parameter for the penalty term}
}
\value{
list object of model fitting results
\describe{
\item{gma}{basis coeffients}
\item{beta_grid}{estimated sparse time varying effects (after soft-thresholding) on the grid points.}
\item{theta_grid}{estimated unthresholded time varying effects on the grid points.}
\item{sd_grid}{estiamted standard deviation of the unthresholded time varying effect estimates on the grid points.}
\item{CI}{list object of 95 percent sparse confidence intervals of each covariate, number of grid points by two matrix for lower CI and upper CI.}
\item{Bs}{Basis function.}
\item{ini.para}{initial values.}
\item{alph}{threhold values.}
\item{BFGS.fit}{output of the function optim for maximizing the partial likelihood function.}
\item{elapsed}{running time in seconds.}
}
}
\description{
Soft-threshold time-varying effects in survival model.
}
\examples{
dat <- sim_data_multi_fun_unstra()
test.time <- seq(from = 0, to = 3,length.out = 500)
res <- STVCox_fit(time=dat$time,
delta=dat$delta,
z=dat$z,
time_grid = test.time,
qn = 8,rho = 0.5)
par(mfcol=c(1,3),mar=c(4,2,2,1))
xpl <- c(test.time,test.time[length(test.time):1])
for(k in 1:3){
ypl <- c(res$CI[[k]][,1],res$CI[[k]][length(test.time):1,2])
plot(test.time,res$beta_grid[,k],type="n",col="blue",
ylim=range(res$CI[[k]]),main=paste("beta",k),xlab="Time")
polygon(xpl,ypl,col="gray",lty=0)
lines(test.time,dat$fun.list[[k]](test.time),col="red",lwd=3)
lines(test.time,res$beta_grid[,k],col="black",lwd=1)
legend("top",c("True Effect","Estimate","95\% Sparse CI"),lwd=c(3,1,6),col=c("red","black","gray"),lty=1)
}
}
\author{
Jian Kang <jiankang@umich.edu> Yuan Yang and Yi Li
}
